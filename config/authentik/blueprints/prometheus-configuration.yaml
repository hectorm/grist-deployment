# yaml-language-server: $schema=https://version-2023-4.goauthentik.io/blueprints/schema.json
version: 1
metadata:
  name: "Prometheus configuration"
  labels:
    blueprints.goauthentik.io/description: "Prometheus configuration"
    blueprints.goauthentik.io/instantiate: "true"
entries:
  # Apply "Default - Events Transport & Rules" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "Default - Events Transport & Rules"
      required: true
  # Apply "Default - Authentication flow" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "Default - Authentication flow"
      required: true
  # Apply "Default - Provider authorization flow (explicit consent)" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "Default - Provider authorization flow (explicit consent)"
      required: true
  # Apply "System - Proxy Provider - Scopes" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "System - Proxy Provider - Scopes"
      required: true
  # Apply "System - OAuth2 Provider - Scopes" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "System - OAuth2 Provider - Scopes"
      required: true
  # Apply "Groups configuration" blueprint
  - model: "authentik_blueprints.metaapplyblueprint"
    attrs:
      identifiers:
        name: "Groups configuration"
      required: true
  # Prometheus provider
  - id: "prometheus-provider"
    identifiers:
      name: "Prometheus"
    model: "authentik_providers_proxy.proxyprovider"
    attrs:
      name: "Prometheus"
      authentication_flow: !Find [authentik_flows.flow, [slug, default-authentication-flow]]
      authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-explicit-consent]]
      invalidation_flow: !Find [authentik_flows.flow, [slug, default-provider-invalidation-flow]]
      mode: "forward_single"
      external_host: !Format [https://%s, !Env PROMETHEUS_DOMAIN]
      access_token_validity: "hours=24"
      refresh_token_validity: "days=30"
      intercept_header_auth: true
      internal_host_ssl_validation: true
      property_mappings:
        - !Find [authentik_providers_oauth2.scopemapping, [managed, goauthentik.io/providers/proxy/scope-proxy]]
        - !Find [authentik_providers_oauth2.scopemapping, [managed, goauthentik.io/providers/oauth2/scope-openid]]
        - !Find [authentik_providers_oauth2.scopemapping, [managed, goauthentik.io/providers/oauth2/scope-email]]
        - !Find [authentik_providers_oauth2.scopemapping, [managed, goauthentik.io/providers/oauth2/scope-profile]]
  # Prometheus application
  - id: "prometheus-application"
    identifiers:
      name: "Prometheus"
    model: "authentik_core.application"
    attrs:
      name: "Prometheus"
      slug: "prometheus"
      provider: !KeyOf prometheus-provider
      policy_engine_mode: "any"
      meta_publisher: "Prometheus"
      meta_launch_url: !Format [https://%s, !Env PROMETHEUS_DOMAIN]
      icon: "/static/dist/custom/icons/prometheus.svg"
  # Prometheus application admin group policy binding
  - identifiers:
      target: !Find [authentik_core.application, [name, Prometheus]]
      group: !Find [authentik_core.group, [name, authentik Admins]]
    model: "authentik_policies.policybinding"
    attrs:
      target: !Find [authentik_core.application, [name, Prometheus]]
      group: !Find [authentik_core.group, [name, authentik Admins]]
      enabled: true
      order: 0
